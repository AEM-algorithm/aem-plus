{"version":3,"sources":["webpack:///src/app/address-book/address-book.page.html","webpack:///src/app/address-book/address-book-routing.module.ts","webpack:///src/app/address-book/address-book.module.ts","webpack:///src/app/address-book/address-book.page.scss","webpack:///src/app/address-book/address-book.page.ts"],"names":["routes","path","component","loadChildren","then","m","AddContactPageModule","DetailPageModule","EditPageModule","AddressBookPageRoutingModule","imports","forChild","exports","AddressBookPageModule","declarations","AddressBookPage","addressesBookService","router","route","loadingCtrl","alertCtrl","isLoading","setTimeout","addressesList","getAddressesList","err","loadingDataFailedAlter","event","filteredAddresses","target","value","id","navigate","relativeTo","contactId","slidingItem","close","create","message","buttons","text","handler","duration","spinner","loading","present","deleteAContact","navigateByUrl","alter","header","alterEl","addressesChangedSub","unsubscribe","selector","template"],"mappings":"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","file":"address-book-address-book-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Address Book</ion-title>\\n  </ion-toolbar>\\n  <div class=\\\"decription ion-text-center\\\">\\n    <span>Store different currencies under same name</span>\\n  </div>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-toolbar class=\\\"search-bar ion-margin-top\\\">\\n    <ion-searchbar slot=\\\"start\\\" class=\\\"ion-no-padding\\\" (ionChange)=\\\"onSearchAddress($event)\\\"></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button class=\\\"add-btn btn-gradient-bg\\\" routerLink=\\\"/tabnav/address-book/add-contact\\\">\\n        <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n  <div *ngIf=\\\"isLoading\\\" class=\\\"ion-text-center\\\">\\n    <p>fetching contacts data</p>\\n    <ion-spinner name=\\\"crescent\\\"></ion-spinner>\\n  </div>\\n\\n  <div *ngIf=\\\"!isLoading && (!addressesList || addressesList.length <= 0)\\\">\\n    <p class=\\\"ion-text-center\\\">No address found</p>\\n  </div>\\n\\n  <ion-list class=\\\"list\\\" lines=\\\"none\\\" *ngIf=\\\"addressesList && addressesList.length > 0\\\">\\n    <ion-virtual-scroll [items]=\\\"addressesList\\\" approxItemHeight=\\\"70px\\\">\\n      <ion-item-sliding *virtualItem=\\\"let address\\\" #contactSlidingItem>\\n        <ion-item (click)=\\\"navToDetail(address.id)\\\">\\n          <ion-avatar slot=\\\"start\\\">\\n            <img src=\\\"assets/img/contact.png\\\" />\\n          </ion-avatar>\\n          <ion-label>{{ address.name }}</ion-label>\\n        </ion-item>\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"onDeleteContact(address.id, contactSlidingItem)\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n          </ion-item-option>\\n        </ion-item-options>\\n      </ion-item-sliding>\\n    </ion-virtual-scroll>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddressBookPage } from './address-book.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddressBookPage,\n  },\n  {\n    path: 'add-contact',\n    loadChildren: () => import('./add-contact/add-contact.module').then((m) => m.AddContactPageModule),\n  },\n  {\n    path: ':id',\n    loadChildren: () => import('./detail/detail.module').then((m) => m.DetailPageModule),\n  },\n  {\n    path: 'edit/:id',\n    loadChildren: () => import('./edit/edit.module').then((m) => m.EditPageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddressBookPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddressBookPageRoutingModule } from './address-book-routing.module';\n\nimport { AddressBookPage } from './address-book.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, AddressBookPageRoutingModule],\n\n  declarations: [AddressBookPage],\n})\nexport class AddressBookPageModule {}\n","export default \".search-bar {\\n  padding: 0 15px;\\n}\\n\\n.list {\\n  padding: 0px 20px;\\n}\\n\\n.list ion-item {\\n  margin: 5px 0;\\n}\\n\\n.list ion-item ion-label {\\n  --color: #00000099;\\n}\\n\\n.list ion-item ion-avatar {\\n  box-shadow: 0 0 8px #41a1c8;\\n}\\n\\n.add-btn {\\n  padding-left: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkcmVzcy1ib29rL2FkZHJlc3MtYm9vay5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtBQUNGOztBQUNFO0VBQ0UsYUFBQTtBQUNKOztBQUNJO0VBQ0Usa0JBQUE7QUFDTjs7QUFFSTtFQUNFLDJCQUFBO0FBQU47O0FBS0E7RUFDRSxpQkFBQTtBQUZGIiwiZmlsZSI6InNyYy9hcHAvYWRkcmVzcy1ib29rL2FkZHJlc3MtYm9vay5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VhcmNoLWJhciB7XG4gIHBhZGRpbmc6IDAgMTVweDtcbn1cblxuLmxpc3Qge1xuICBwYWRkaW5nOiAwcHggMjBweDtcblxuICBpb24taXRlbSB7XG4gICAgbWFyZ2luOiA1cHggMDtcblxuICAgIGlvbi1sYWJlbCB7XG4gICAgICAtLWNvbG9yOiAjMDAwMDAwOTk7XG4gICAgfVxuXG4gICAgaW9uLWF2YXRhciB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgOHB4ICM0MWExYzg7XG4gICAgfVxuICB9XG59XG5cbi5hZGQtYnRuIHtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG59XG4iXX0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { AlertController, IonItemSliding, LoadingController } from '@ionic/angular';\n\nimport { Address } from '../services/models/address.modal';\nimport { AddressBookService } from '../services/address-book/address-book.service';\n\n@Component({\n  selector: 'app-address-book',\n  templateUrl: './address-book.page.html',\n  styleUrls: ['./address-book.page.scss'],\n})\nexport class AddressBookPage implements OnInit, OnDestroy {\n  isLoading = true;\n  addressesList: Address[];\n\n  private addressesChangedSub: Subscription;\n\n  constructor(\n    private addressesBookService: AddressBookService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController\n  ) {}\n\n  ngOnInit() {\n    // this.loadingCtrl\n    //   .create({\n    //     message: 'fetching address book data...',\n    //     spinner: 'circles',\n    //   })\n    //   .then((loadingEl) => {\n    //     loadingEl.present();\n    //     try {\n    //       this.addressesList = this.addressesBookService.getAddressesList();\n    //       this.isLoading = false;\n    //       loadingEl.dismiss();\n    //       // throw new Error(); // testing error alert\n    //     } catch (err) {\n    //       // handle any errors here:\n    //       loadingEl.dismiss();\n    //       this.loadingDataFailedAlter('Fetching data failed, please try again');\n    //     }\n\n    //     this.addressesChangedSub = this.addressesBookService.addressesChanged.subscribe((newAddresses: Address[]) => {\n    //       this.addressesList = newAddresses;\n    //     });\n    //   });\n\n    //  --- Fake http request:\n    setTimeout(() => {\n      try {\n        this.addressesList = this.addressesBookService.getAddressesList();\n        this.isLoading = false;\n        // throw new Error(); // testing error alert\n      } catch (err) {\n        // handle any errors here:\n        this.loadingDataFailedAlter('Fetching data failed, please try again');\n      }\n    }, 2000);\n  }\n\n  // ionViewWillEnter() {\n  //   this.addressesList = this.addressesBookService.getAddressesList();\n  // }\n\n  onSearchAddress(event: any) {\n    this.addressesList = this.addressesBookService.filteredAddresses(event.target.value);\n  }\n\n  navToDetail(id: string) {\n    this.router.navigate(['/tabnav', 'address-book', id], { relativeTo: this.route });\n  }\n  async onDeleteContact(contactId: string, slidingItem: IonItemSliding) {\n    slidingItem.close();\n\n    const alter = await this.alertCtrl.create({\n      message: 'Are you sure you want to delete this contact?',\n      buttons: [\n        {\n          text: 'Cancel',\n        },\n        {\n          text: 'Delete',\n          handler: async () => {\n            const loading = await this.loadingCtrl.create({\n              message: 'deleting contact...',\n              duration: 2000,\n              spinner: 'circles',\n            });\n            await loading.present();\n\n            try {\n              this.addressesBookService.deleteAContact(contactId);\n            } catch (err) {\n              // catch any errors:\n            }\n            this.router.navigateByUrl('/tabnav/address-book');\n          },\n        },\n      ],\n    });\n\n    await alter.present();\n  }\n\n  private loadingDataFailedAlter(message: string) {\n    this.alertCtrl\n      .create({\n        header: 'Fetching data failed',\n        message: message,\n        buttons: ['Okay'],\n      })\n      .then((alterEl) => {\n        alterEl.present();\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.addressesChangedSub) {\n      this.addressesChangedSub.unsubscribe();\n    }\n  }\n}\n"]}