{"version":3,"sources":["./src/app/export/confirm-modal/confirm-modal.component.html","./src/app/export/export.page.html","./src/app/export/confirm-modal/confirm-modal.component.scss","./src/app/export/confirm-modal/confirm-modal.component.ts","./src/app/export/export-routing.module.ts","./src/app/export/export.module.ts","./src/app/export/export.page.scss","./src/app/export/export.page.ts"],"names":[],"mappings":"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","file":"export-export-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n  <!-- <h6>Confirm transaction</h5> -->\\n\\n  <ion-list lines=\\\"none\\\">\\n    <ion-list-header>\\n      <ion-label>Confirm transaction</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>\\n        <h6>From</h6>\\n        <ion-text>{{ fromDate }}</ion-text>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>\\n        <h6>To</h6>\\n        <ion-text>{{ toDate }}</ion-text>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n  <p>Needs redefine???? or remove</p>\\n  <p>this is for confirming the export info not for purchasing the export function</p>\\n</ion-content>\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button class=\\\"ion-margin-right\\\" (click)=\\\"close()\\\">Cancel</ion-button>\\n      <ion-button (click)=\\\"confirm()\\\">Confirm</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Export</ion-title>\\n  </ion-toolbar>\\n  <div class=\\\"decription ion-text-center\\\">\\n    <span>\\n      ???some basic info for user (how much to cost for unlocking the export, what user can do once unlock the export)\\n    </span>\\n  </div>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding-top\\\">\\n  <form [formGroup]=\\\"exportForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <h5 class=\\\"title\\\">From</h5>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-datetime\\n        slot=\\\"end\\\"\\n        max=\\\"2022-12-31\\\"\\n        value=\\\"2019-10-01T15:43:40.394Z\\\"\\n        displayFormat=\\\"D/MM/YYYY\\\"\\n        formControlName=\\\"dateFrom\\\"\\n      ></ion-datetime>\\n    </ion-item>\\n\\n    <h5 class=\\\"title\\\">To</h5>\\n    <ion-item lines=\\\"none\\\" class=\\\"input-shadow\\\">\\n      <ion-datetime\\n        slot=\\\"end\\\"\\n        max=\\\"2022-12-31\\\"\\n        value=\\\"2019-10-01T15:43:40.394Z\\\"\\n        displayFormat=\\\"D/MM/YYYY\\\"\\n        formControlName=\\\"dateTo\\\"\\n      ></ion-datetime>\\n    </ion-item>\\n\\n    <h5 class=\\\"title\\\">Cryptocurrency type</h5>\\n    <ion-item lines=\\\"none\\\" class=\\\"input-shadow\\\">\\n      <ion-select slot=\\\"end\\\" formControlName=\\\"walletType\\\" (ionChange)=\\\"onSelectType($event)\\\">\\n        <ion-select-option value=\\\"BTC\\\">BTC</ion-select-option>\\n        <ion-select-option value=\\\"NEM\\\">XEM</ion-select-option>\\n        <ion-select-option value=\\\"ETH\\\">ETH</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <h5 class=\\\"title\\\">Wallets</h5>\\n    <ion-item lines=\\\"none\\\" class=\\\"input-shadow\\\">\\n      <ion-select\\n        slot=\\\"end\\\"\\n        multiple=\\\"true\\\"\\n        formControlName=\\\"walletsExport\\\"\\n        (ionChange)=\\\"onSelectExportWallets($event)\\\"\\n      >\\n        <ion-select-option *ngFor=\\\"let wallet of wallets\\\" [value]=\\\"wallet.walletId\\\">\\n          {{wallet.walletName}}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <div class=\\\"btn-div\\\">\\n      <!--   if user's export function unlocked:  make purchase-->\\n      <ion-button\\n        *ngIf=\\\"!isExportUnlocked; else exportTrans\\\"\\n        class=\\\"btn-gradient-bg\\\"\\n        type=\\\"submit\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Unlock Export\\n      </ion-button>\\n      <!--    if user's export function locked:  select transactions export file formate-->\\n      <ng-template #exportTrans>\\n        <ion-button\\n          class=\\\"btn-gradient-bg\\\"\\n          [disabled]=\\\"exportForm.invalid\\\"\\n          type=\\\"button\\\"\\n          expand=\\\"block\\\"\\n          (click)=\\\"exportCSV()\\\"\\n        >\\n          Export as CSV\\n        </ion-button>\\n\\n        <ion-button\\n          class=\\\"btn-gradient-bg\\\"\\n          [disabled]=\\\"exportForm.invalid\\\"\\n          type=\\\"button\\\"\\n          expand=\\\"block\\\"\\n          (click)=\\\"exportExcel()\\\"\\n        >\\n          Export as Excel\\n        </ion-button>\\n      </ng-template>\\n    </div>\\n  </form>\\n</ion-content>\\n\";","export default \"ion-list-header ion-label {\\n  margin-top: 20px;\\n  --color: #074673;\\n  font-size: 20px;\\n}\\n\\nion-item h6 {\\n  color: #216e9a;\\n  font-size: 12px;\\n  font-weight: bold;\\n  font-family: Roboto;\\n}\\n\\nion-item p {\\n  color: #000000de;\\n  font-size: 16px;\\n  font-family: Roboto;\\n}\\n\\nion-footer ion-button {\\n  color: #074673;\\n  font-size: 14px;\\n}\\n\\nion-note {\\n  --color: #9f9f9f;\\n  font-size: 11px;\\n  font-family: Roboto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXhwb3J0L2NvbmZpcm0tbW9kYWwvY29uZmlybS1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0FBQUo7O0FBS0U7RUFDRSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUFGSjs7QUFJRTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0FBRko7O0FBT0U7RUFDRSxjQUFBO0VBQ0EsZUFBQTtBQUpKOztBQVFBO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFMRiIsImZpbGUiOiJzcmMvYXBwL2V4cG9ydC9jb25maXJtLW1vZGFsL2NvbmZpcm0tbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tbGlzdC1oZWFkZXIge1xuICBpb24tbGFiZWwge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgLS1jb2xvcjogIzA3NDY3MztcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cbn1cblxuaW9uLWl0ZW0ge1xuICBoNiB7XG4gICAgY29sb3I6ICMyMTZlOWE7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XG4gIH1cbiAgcCB7XG4gICAgY29sb3I6ICMwMDAwMDBkZTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC1mYW1pbHk6IFJvYm90bztcbiAgfVxufVxuXG5pb24tZm9vdGVyIHtcbiAgaW9uLWJ1dHRvbiB7XG4gICAgY29sb3I6ICMwNzQ2NzM7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG59XG5cbmlvbi1ub3RlIHtcbiAgLS1jb2xvcjogIzlmOWY5ZjtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBmb250LWZhbWlseTogUm9ib3RvO1xufVxuIl19 */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { AlertController, LoadingController, ModalController, ToastController } from '@ionic/angular';\nimport { HelperFunService } from 'src/app/services/helper/helper-fun.service';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.scss'],\n})\nexport class ConfirmModalComponent implements OnInit {\n  @Input() submitData;\n\n  fromDate: string;\n  toDate: string;\n  // walletToPayType: string;\n  audAmount: number;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private loadingCtrl: LoadingController,\n    private helperService: HelperFunService\n  ) {}\n\n  exportSuccess = false;\n\n  ngOnInit() {\n    // console.log(this.submitData);\n    this.fromDate = this.helperService.dateFormat(this.submitData.dateFrom);\n    this.toDate = this.helperService.dateFormat(this.submitData.dateTo);\n    // this.walletToPayType = this.submitData.paymentWallet.walletType;\n\n    //=====TODO: convert the cryptocurrency value to aud value. backend??\n    this.audAmount = 2.22;\n  }\n\n  close() {\n    this.modalCtrl.dismiss();\n  }\n\n  async showLoading() {\n    this.loadingCtrl\n      .create({\n        message: 'Please wait for transfer complete',\n        spinner: 'circular',\n        cssClass: 'transfer-loading',\n        // duration: 2000,\n      })\n      .then((loadEl) => {\n        loadEl.present();\n        // fake the request:\n        setTimeout(() => {\n          loadEl.dismiss();\n          // TODO: the different format files:\n          //       then the social sharing\n        }, 2000);\n      });\n  }\n\n  confirm() {\n    // console.log('confirm....');\n    this.close();\n    this.showLoading();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExportPage } from './export.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExportPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExportPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExportPageRoutingModule } from './export-routing.module';\n\nimport { ExportPage } from './export.page';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, IonicModule, ExportPageRoutingModule],\n  declarations: [ExportPage],\n})\nexport class ExportPageModule {}\n","export default \"form {\\n  padding: 0 20px;\\n}\\n\\n.title {\\n  font-size: 14px;\\n  color: #074673;\\n  font-weight: bold;\\n}\\n\\nion-item {\\n  box-shadow: 0px 3px 6px #00000029;\\n  border-radius: 8px;\\n}\\n\\nion-item ion-datetime,\\nion-item ion-select {\\n  --placeholder-color: #000000de;\\n  font-size: 14px;\\n  font-family: Roboto;\\n}\\n\\n.fee-info {\\n  color: #41a1c8;\\n  font-size: 12px;\\n}\\n\\nion-select.in-item {\\n  max-width: 100%;\\n}\\n\\n.btn-div {\\n  margin: 20px 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXhwb3J0L2V4cG9ydC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQ0FBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBQ0U7O0VBRUUsOEJBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFDSjs7QUFHQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0FBQUY7O0FBR0E7RUFDRSxlQUFBO0FBQUY7O0FBR0E7RUFDRSxjQUFBO0FBQUYiLCJmaWxlIjoic3JjL2FwcC9leHBvcnQvZXhwb3J0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICMwNzQ2NzM7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5pb24taXRlbSB7XG4gIGJveC1zaGFkb3c6IDBweCAzcHggNnB4ICMwMDAwMDAyOTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuXG4gIGlvbi1kYXRldGltZSxcbiAgaW9uLXNlbGVjdCB7XG4gICAgLS1wbGFjZWhvbGRlci1jb2xvcjogIzAwMDAwMGRlO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LWZhbWlseTogUm9ib3RvO1xuICB9XG59XG5cbi5mZWUtaW5mbyB7XG4gIGNvbG9yOiAjNDFhMWM4O1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbmlvbi1zZWxlY3QuaW4taXRlbSB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLmJ0bi1kaXYge1xuICBtYXJnaW46IDIwcHggMDtcbn1cbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { AlertController, LoadingController, ModalController } from '@ionic/angular';\n\nimport { Wallet } from '../services/models/wallet.model';\nimport { WalletsService } from '../services/wallets/wallets.service';\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: 'app-export',\n  templateUrl: './export.page.html',\n  styleUrls: ['./export.page.scss'],\n})\nexport class ExportPage implements OnInit {\n  exportForm: FormGroup;\n\n  type: string; // selected export wallet type\n  purchaseFee: number = 12; // unlock export fee: hardcode now\n  wallets: Wallet[]; // wallets of the selected type that the user has\n  walletsToExport: Wallet[]; // selected wallets from walllets\n\n  exportFormData: {\n    dateFrom: Date;\n    dateTo: Date;\n    walletType: string;\n    walletsExport: Wallet[];\n    exportFee: number;\n  };\n\n  walletsToExportSelected = false;\n\n  // TODO: after add in app purchase\n  //       set it to true, if user unlock the export function\n  //       change the confirm modal info without the purchase fee\n  isExportUnlocked = false; // -------  needs to store server-side under this user.\n  // isExportUnlocked = true; // testing\n\n  constructor(\n    private alterCtrl: AlertController,\n    private modalCtrl: ModalController,\n    private walletsService: WalletsService,\n    private loadingCtrl: LoadingController\n  ) {}\n\n  ionViewWillEnter() {}\n\n  ngOnInit() {\n    this.wallets = this.walletsService.getSameTypeWallets('BTC');\n\n    this.exportForm = new FormGroup({\n      dateFrom: new FormControl(null, [Validators.required]),\n      dateTo: new FormControl(null, [Validators.required]),\n      walletType: new FormControl('BTC', [Validators.required]),\n      walletsExport: new FormControl(null, [Validators.required]), // can selecet multiple wallet\n    });\n  }\n\n  onSelectType(e: any) {\n    const type = e.detail.value;\n    //  ---- get the selected type wallets of this users possessed\n    this.wallets = this.walletsService.getSameTypeWallets(type);\n    //  ---- empty the walletExport every time user select the type\n    this.exportForm.get('walletsExport').setValue(null);\n  }\n\n  onSelectExportWallets(e: any) {\n    this.walletsToExport = e.detail.value;\n    this.walletsToExportSelected = true;\n  }\n\n  onSubmit() {\n    const type = this.exportForm.get('walletType').value;\n\n    this.exportFormData = {\n      dateFrom: new Date(this.exportForm.get('dateFrom').value),\n      dateTo: new Date(this.exportForm.get('dateTo').value),\n      walletType: type,\n      walletsExport: this.walletsToExport,\n      exportFee: this.purchaseFee,\n    };\n\n    // ---- if the user didn't unlock export function show this alter window\n    if (!this.isExportUnlocked) {\n      this.alterCtrl\n        .create({\n          header: 'Confirm your In-App purchase',\n          message: `info about the export fee??????`,\n          cssClass: 'purchase-alter',\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n            },\n            {\n              text: 'Buy',\n              role: 'confirm',\n              handler: () => {\n                // console.log('confirm the purchase of wallet export function');\n                // -------  TODO: show the in-app purchase first (3rd package) instead of this loading\n                this.loadingCtrl\n                  .create({\n                    message: 'purchasing, unlock the export',\n                    spinner: 'circles',\n                    duration: 2000,\n                  })\n                  .then((loadingEl) => {\n                    loadingEl.present();\n                    this.isExportUnlocked = true;\n                  });\n              },\n            },\n          ],\n        })\n        .then((alterEl) => {\n          alterEl.present();\n        });\n    } else {\n      //  ----- if the user purchased the export producte:\n      //          show the export info confirm modal\n      this.modalCtrl\n        .create({\n          component: ConfirmModalComponent,\n          componentProps: {\n            submitData: this.exportFormData,\n          },\n          cssClass: 'center-small-modal',\n        })\n        .then((modalEl) => {\n          modalEl.present();\n        });\n    }\n    // console.log('after submit:', this.exportForm.value);\n    // this.exportForm.reset(); // after the export transaction made then reset the form???\n  }\n\n  exportExcel() {\n    console.log('export as pdf.....');\n    // this.exportForm.reset();\n  }\n\n  exportCSV() {\n    console.log('export as csv.....');\n    // this.exportForm.reset();\n  }\n}\n"],"sourceRoot":"webpack:///"}