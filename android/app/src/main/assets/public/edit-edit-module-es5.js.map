{"version":3,"sources":["webpack:///src/app/address-book/edit/edit.page.html","webpack:///src/app/address-book/edit/edit-routing.module.ts","webpack:///src/app/address-book/edit/edit.module.ts","webpack:///src/app/address-book/edit/edit.page.scss","webpack:///src/app/address-book/edit/edit.page.ts"],"names":["routes","path","component","EditPageRoutingModule","imports","forChild","exports","EditPageModule","declarations","EditPage","route","addressBookService","navCtrl","params","subscribe","id","addresses","getAddress","contactChangedSub","contactChanged","newContact","walletsAddresses","address","push","type","required","description","editForm","name","updateOn","validators","ABNNum","email","companyAddress","companyName","get","controls","editAddressData","value","updateAddress","back","unsubscribe","selector","template"],"mappings":"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","file":"edit-edit-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [defaultHref]=\\\"'/tabnav/address-book/' + addresses.id\\\" text=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"onSave()\\\"> Save </ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit Address</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"avatar-div\\\">\\n    <ion-avatar>\\n      <img src=\\\"assets/img/contact.png\\\" />\\n    </ion-avatar>\\n  </div>\\n\\n  <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <div class=\\\"personal-info-div\\\">\\n      <h5 class=\\\"title\\\">Name</h5>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-input formControlName=\\\"name\\\"></ion-input>\\n      </ion-item>\\n\\n      <h5 class=\\\"title\\\">Email</h5>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-input formControlName=\\\"email\\\"></ion-input>\\n      </ion-item>\\n\\n      <h5 class=\\\"title\\\">ABN</h5>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-input formControlName=\\\"ABNNum\\\"></ion-input>\\n      </ion-item>\\n\\n      <h5 class=\\\"title\\\">Company Name</h5>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-input formControlName=\\\"companyName\\\"></ion-input>\\n      </ion-item>\\n\\n      <h5 class=\\\"title\\\">Company Address</h5>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-textarea formControlName=\\\"companyAddress\\\"></ion-textarea>\\n      </ion-item>\\n    </div>\\n\\n    <div class=\\\"addresses-info-div\\\">\\n      <div formArrayName=\\\"walletsAddresses\\\" class=\\\"addresses-info\\\">\\n        <!-- loop throught this contact's addresses -->\\n        <div *ngFor=\\\"let addressCrtl of getAddressControls(); let i = index\\\" [formGroupName]=\\\"i\\\" class=\\\"address-info\\\">\\n          <ion-item class=\\\"type-item\\\" lines=\\\"none\\\">\\n            <ion-img\\n              [src]=\\\" addressCrtl.value.type === 'BTC'? 'assets/img/bitcoin.png' : 'assets/img/nem-icon.png'\\\"\\n            ></ion-img>\\n            <ion-text class=\\\"wallet-type\\\">{{addressCrtl.value.type === 'BTC' ? 'BTC' : 'EXM'}}</ion-text>\\n          </ion-item>\\n\\n          <div class=\\\"info-edit-div address-edit\\\">\\n            <h5 class=\\\"title description\\\">Description</h5>\\n            <ion-item lines=\\\"none\\\" class=\\\"info-input\\\">\\n              <ion-input formControlName=\\\"description\\\"> </ion-input>\\n            </ion-item>\\n\\n            <h5 class=\\\"title\\\">Address</h5>\\n            <ion-item lines=\\\"none\\\" class=\\\"info-input\\\">\\n              <ion-input formControlName=\\\"address\\\"></ion-input>\\n            </ion-item>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"btn-gradient-bg\\\">Save</ion-button>\\n    </div>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPageRoutingModule } from './edit-routing.module';\n\nimport { EditPage } from './edit.page';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, IonicModule, EditPageRoutingModule],\n  declarations: [EditPage],\n})\nexport class EditPageModule {}\n","export default \".avatar-div {\\n  display: flex;\\n  justify-content: center;\\n  padding: 20px;\\n}\\n.avatar-div ion-avatar {\\n  width: 100px;\\n  height: 100px;\\n}\\n.title {\\n  font-size: 14px;\\n  color: #074673;\\n  font-weight: bold;\\n}\\n.personal-info-div {\\n  padding: 0 20px 20px 20px;\\n}\\n.personal-info-div ion-item {\\n  box-shadow: 0px 3px 6px #00000029;\\n  border-radius: 8px;\\n  font-size: 14px;\\n}\\n.addresses-info-div {\\n  background: #f7f7f7;\\n  border-radius: 20px 20px 0 0;\\n  padding: 20px;\\n}\\n.addresses-info-div ion-img {\\n  height: 25px;\\n  width: 25px;\\n  padding-right: 5px;\\n}\\n.addresses-info-div .addresses-info .info-input {\\n  --background: #f7f7f7;\\n  --border-radius: 4px;\\n  font-size: 14px;\\n}\\n.addresses-info-div .addresses-info .address-info {\\n  box-shadow: 0px 3px 6px #00000029;\\n  background: #ffffff;\\n  border-radius: 20px 20px 20px 20px;\\n  margin-bottom: 15px;\\n}\\n.addresses-info-div .addresses-info .address-info .type-item {\\n  border-radius: 20px;\\n}\\n.addresses-info-div .addresses-info .address-info .address-edit {\\n  padding: 0 15px 15px 15px;\\n}\\n.addresses-info-div .addresses-info .description {\\n  margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkcmVzcy1ib29rL2VkaXQvZWRpdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxhQUFBO0FBQ0Y7QUFBRTtFQUNFLFlBQUE7RUFDQSxhQUFBO0FBRUo7QUFFQTtFQUNFLGVBQUE7RUFDQSxjQUFBO0VBQ0EsaUJBQUE7QUFDRjtBQUVBO0VBQ0UseUJBQUE7QUFDRjtBQUFFO0VBQ0UsaUNBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFFSjtBQUVBO0VBQ0UsbUJBQUE7RUFDQSw0QkFBQTtFQUNBLGFBQUE7QUFDRjtBQUNFO0VBQ0UsWUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQUNKO0FBR0k7RUFDRSxxQkFBQTtFQUNBLG9CQUFBO0VBQ0EsZUFBQTtBQUROO0FBSUk7RUFDRSxpQ0FBQTtFQUNBLG1CQUFBO0VBTUEsa0NBQUE7RUFJQSxtQkFBQTtBQVZOO0FBRU07RUFDRSxtQkFBQTtBQUFSO0FBSU07RUFDRSx5QkFBQTtBQUZSO0FBT0k7RUFDRSxlQUFBO0FBTE4iLCJmaWxlIjoic3JjL2FwcC9hZGRyZXNzLWJvb2svZWRpdC9lZGl0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdmF0YXItZGl2IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGlvbi1hdmF0YXIge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICB9XG59XG5cbi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICMwNzQ2NzM7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ucGVyc29uYWwtaW5mby1kaXYge1xuICBwYWRkaW5nOiAwIDIwcHggMjBweCAyMHB4O1xuICBpb24taXRlbSB7XG4gICAgYm94LXNoYWRvdzogMHB4IDNweCA2cHggIzAwMDAwMDI5O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbn1cblxuLmFkZHJlc3Nlcy1pbmZvLWRpdiB7XG4gIGJhY2tncm91bmQ6ICNmN2Y3Zjc7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHggMjBweCAwIDA7XG4gIHBhZGRpbmc6IDIwcHg7XG5cbiAgaW9uLWltZyB7XG4gICAgaGVpZ2h0OiAyNXB4O1xuICAgIHdpZHRoOiAyNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcbiAgfVxuXG4gIC5hZGRyZXNzZXMtaW5mbyB7XG4gICAgLmluZm8taW5wdXQge1xuICAgICAgLS1iYWNrZ3JvdW5kOiAjZjdmN2Y3O1xuICAgICAgLS1ib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuXG4gICAgLmFkZHJlc3MtaW5mbyB7XG4gICAgICBib3gtc2hhZG93OiAwcHggM3B4IDZweCAjMDAwMDAwMjk7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuXG4gICAgICAudHlwZS1pdGVtIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAgIH1cblxuICAgICAgYm9yZGVyLXJhZGl1czogMjBweCAyMHB4IDIwcHggMjBweDtcbiAgICAgIC5hZGRyZXNzLWVkaXQge1xuICAgICAgICBwYWRkaW5nOiAwIDE1cHggMTVweCAxNXB4O1xuICAgICAgfVxuICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgICB9XG5cbiAgICAuZGVzY3JpcHRpb24ge1xuICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIH1cbiAgfVxufVxuIl19 */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\nimport { NavController } from '@ionic/angular';\n\nimport { AddressBookService } from 'src/app/services/address-book/address-book.service';\nimport { Address } from 'src/app/services/models/address.modal';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit, OnDestroy {\n  editForm: FormGroup;\n  addresses: Address; // this contact info\n  id: string;\n\n  private contactChangedSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private addressBookService: AddressBookService,\n    private navCtrl: NavController\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      this.id = params['id'];\n      this.addresses = this.addressBookService.getAddress(this.id);\n    });\n\n    this.contactChangedSub = this.addressBookService.contactChanged.subscribe((newContact: Address) => {\n      this.addresses = newContact;\n    });\n\n    let walletsAddresses = new FormArray([]);\n    //   -------  group the wallets' addresses\n    for (let address of this.addresses.walletsAddresses) {\n      walletsAddresses.push(\n        new FormGroup({\n          type: new FormControl(address.type),\n          address: new FormControl(address.address, [Validators.required]),\n          description: new FormControl(address.description),\n        })\n      );\n    }\n\n    this.editForm = new FormGroup({\n      name: new FormControl(this.addresses.name, {\n        updateOn: 'blur',\n        validators: [Validators.required],\n      }),\n      ABNNum: new FormControl(this.addresses.ABNNum, {\n        updateOn: 'blur',\n        validators: [Validators.required],\n      }),\n      email: new FormControl(this.addresses.email, {\n        updateOn: 'blur',\n        validators: [Validators.required],\n      }),\n\n      companyAddress: new FormControl(this.addresses.companyAddress, {\n        updateOn: 'blur',\n        validators: [Validators.required],\n      }),\n      companyName: new FormControl(this.addresses.companyName, {\n        updateOn: 'blur',\n        validators: [Validators.required],\n      }),\n      walletsAddresses: walletsAddresses,\n    });\n  }\n\n  getAddressControls() {\n    // console.log('get control props:', (<FormArray>this.editForm.get('walletsAddresses')).controls);//value:\n    // value: {\n    //   address: 'zidiNEMaskdjfksladgjklasdfasdfsdf';\n    //   description: 'business';\n    //   type: 'NEM';\n    // }\n    return (<FormArray>this.editForm.get('walletsAddresses')).controls;\n  }\n\n  onSave() {\n    const editAddressData = new Address(\n      this.id,\n      this.editForm.value['name'],\n      this.editForm.value['ABNNum'],\n      this.editForm.value['email'],\n      this.editForm.value['companyAddress'],\n      this.editForm.value['companyName'],\n      this.editForm.value['walletsAddresses']\n    );\n\n    this.addressBookService.updateAddress(this.id, editAddressData);\n\n    this.navCtrl.back();\n  }\n\n  ngOnDestroy() {\n    if (this.contactChangedSub) {\n      this.contactChangedSub.unsubscribe();\n    }\n  }\n}\n"]}