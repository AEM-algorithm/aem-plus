{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-0d5784f9.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/address-book/add-address-modal/add-address-modal.component.html","./src/app/address-book/add-address-modal/add-address-modal.component.scss","./src/app/address-book/add-address-modal/add-address-modal.component.ts","./src/app/services/address-book/address-book.service.ts","./src/app/services/dummyData/address-list.data.ts","./src/app/services/dummyData/notifications.data.ts","./src/app/services/helper/helper-fun.service.ts","./src/app/services/models/address.modal.ts","./src/app/services/notifications/notifications.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAe,4vCAA6rC,E;;;;;;;;;;;;ACA5sC;AAAe,yEAAU,sBA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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-44bf8136.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-content>\\n  <ion-item lines=\\\"none\\\" class=\\\"header\\\">\\n    <ion-label class=\\\"title\\\"> Add a new wallet </ion-label>\\n    <ion-button fill=\\\"clear\\\" (click)=\\\"close()\\\">\\n      <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"> </ion-icon>\\n    </ion-button>\\n  </ion-item>\\n\\n  <form [formGroup]=\\\"addAddressForm\\\" (ngSubmit)=\\\"onAddAddress()\\\">\\n    <h5 class=\\\"label\\\">Wallet Type</h5>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-select formControlName=\\\"type\\\" slot=\\\"end\\\" interface=\\\"popover\\\">\\n        <ion-select-option value=\\\"BTC\\\">BTC</ion-select-option>\\n        <ion-select-option value=\\\"NEM\\\">XEM</ion-select-option>\\n        <ion-select-option value=\\\"ETH\\\">ETH</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <h5 class=\\\"label\\\">Wallet Address</h5>\\n    <ion-item lines=\\\"none\\\"> <ion-input formControlName=\\\"address\\\"></ion-input> </ion-item>\\n\\n    <h5 class=\\\"label\\\">Description</h5>\\n    <ion-item lines=\\\"none\\\"> <ion-input formControlName=\\\"description\\\"></ion-input> </ion-item>\\n\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-top btn-gradient-bg\\\" [disabled]=\\\"addAddressForm.invalid\\\"\\n      >Add</ion-button\\n    >\\n  </form>\\n</ion-content>\\n\";","export default \".header {\\n  padding-top: 10px;\\n}\\n.header .title {\\n  font-size: 20px;\\n  margin: 0;\\n  font-weight: bold;\\n}\\nform {\\n  padding: 20px;\\n}\\nform ion-item {\\n  box-shadow: 0px 3px 6px #00000029;\\n  border-radius: 8px;\\n  margin-bottom: 5px;\\n}\\nform .label {\\n  font-size: 14px;\\n  color: #074673;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkcmVzcy1ib29rL2FkZC1hZGRyZXNzLW1vZGFsL2FkZC1hZGRyZXNzLW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQUE7QUFDRjtBQUFFO0VBQ0UsZUFBQTtFQUNBLFNBQUE7RUFDQSxpQkFBQTtBQUVKO0FBRUE7RUFDRSxhQUFBO0FBQ0Y7QUFDRTtFQUNFLGlDQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQUNKO0FBRUU7RUFDRSxlQUFBO0VBQ0EsY0FBQTtBQUFKIiwiZmlsZSI6InNyYy9hcHAvYWRkcmVzcy1ib29rL2FkZC1hZGRyZXNzLW1vZGFsL2FkZC1hZGRyZXNzLW1vZGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlciB7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICAudGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbn1cblxuZm9ybSB7XG4gIHBhZGRpbmc6IDIwcHg7XG5cbiAgaW9uLWl0ZW0ge1xuICAgIGJveC1zaGFkb3c6IDBweCAzcHggNnB4ICMwMDAwMDAyOTtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICB9XG5cbiAgLmxhYmVsIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6ICMwNzQ2NzM7XG4gIH1cbn1cbiJdfQ== */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\n\nimport { AddressBookService } from 'src/app/services/address-book/address-book.service';\nimport { Address } from 'src/app/services/models/address.modal';\n\n@Component({\n  selector: 'app-add-address-modal',\n  templateUrl: './add-address-modal.component.html',\n  styleUrls: ['./add-address-modal.component.scss'],\n})\nexport class AddAddressModalComponent implements OnInit {\n  @Input() contact: Address;\n\n  @Input() isNewContact: boolean;\n\n  addAddressForm: FormGroup;\n\n  constructor(private modalCtrl: ModalController, private addressBookService: AddressBookService) {}\n\n  ngOnInit() {\n    console.log(' add address modal:', this.isNewContact);\n    this.addAddressForm = new FormGroup({\n      type: new FormControl(null, { validators: [Validators.required] }),\n      address: new FormControl(null, { validators: [Validators.required] }),\n      description: new FormControl(null), // optional\n    });\n  }\n\n  close() {\n    this.modalCtrl.dismiss();\n  }\n\n  onAddAddress() {\n    if (this.isNewContact) {\n      const address = this.addAddressForm.value;\n      this.modalCtrl.dismiss(this.addAddressForm.value, 'confirm');\n    } else {\n      this.addressBookService.addAnAddress(this.contact.id, this.addAddressForm.value);\n      this.close();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { addressesList } from '../dummyData/address-list.data';\nimport { Address, walletAddress } from '../models/address.modal';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressBookService {\n  private addressesList: Address[] = addressesList;\n\n  addressesChanged = new Subject<Address[]>();\n  contactChanged = new Subject<Address>();\n\n  constructor() {}\n\n  setAddressesList(newAddressesList: Address[]) {\n    this.addressesList = newAddressesList;\n    this.addressesChanged.next(newAddressesList.slice());\n  }\n\n  getAddressesList() {\n    return [...this.addressesList];\n  }\n\n  // Get the contact by id:\n  getAddress(id: string) {\n    return this.addressesList.find((address) => address.id === id);\n  }\n\n  filteredAddresses(inputVal: string) {\n    return inputVal && inputVal.trim() !== ''\n      ? [\n          ...this.addressesList.filter((address) => {\n            return address.name.toLowerCase().indexOf(inputVal.toLowerCase()) > -1;\n          }),\n        ]\n      : [...this.addressesList];\n  }\n\n  updateAddress(id: string, newAddressData: Address) {\n    const index = this.addressesList.findIndex((address) => address.id === id);\n    this.addressesList[index] = newAddressData;\n    this.addressesChanged.next(this.addressesList.slice());\n  }\n\n  // ------ add an address to a contact by id\n  addAnAddress(id: string, address: walletAddress) {\n    const contact = this.addressesList.find((contact) => contact.id === id);\n    contact.walletsAddresses.push(address);\n    const newContact = { ...contact };\n    // console.log('service add an address: ', newContact);\n    this.contactChanged.next(newContact);\n  }\n\n  // add a new contact:\n  addNewContact(\n    name: string,\n    ABNNum: number,\n    email: string,\n    companyAddress: string,\n    companyName: string,\n    walletsAddresses: walletAddress[]\n  ) {\n    //  manually add id here. ----> id: generate by backend?\n    const newContact: Address = new Address(\n      Math.random().toString(),\n      name,\n      ABNNum,\n      email,\n      companyAddress,\n      companyName,\n      walletsAddresses\n    );\n\n    this.addressesList.push(newContact);\n    this.addressesChanged.next(this.addressesList.slice());\n  }\n\n  // --- get all the same type of crypto addresses from the contacts\n  //      with the contact's info together: for generating transaction data\n  getAllSameCryptoAddresses(walletType: string) {\n    let allSameTypeAddresses = [];\n\n    this.addressesList.forEach((contact) => {\n      return contact.walletsAddresses.filter((addressObj) => {\n        if (addressObj.type === walletType) {\n          const aNewAddressObj = {\n            address: addressObj.address,\n            description: addressObj.description && addressObj.description,\n            holderName: contact.name,\n            type: addressObj.type,\n            businessName: contact.companyName,\n            ABNNum: contact.ABNNum,\n          };\n          allSameTypeAddresses.push(aNewAddressObj);\n        }\n      });\n    });\n    return allSameTypeAddresses;\n  }\n\n  deleteAnAddressFromContact(id: string, selectedAddress: string) {\n    const index = this.addressesList.findIndex((address) => address.id === id);\n    const oldContact = this.getAddress(id);\n\n    const updatedContactWallets = oldContact.walletsAddresses.filter((address) => address.address !== selectedAddress);\n    const updatedContact = { ...oldContact, walletsAddresses: updatedContactWallets };\n\n    this.contactChanged.next(updatedContact);\n\n    this.addressesList[index] = updatedContact;\n    this.addressesChanged.next(this.addressesList.slice());\n  }\n\n  // delete a contact by Id:\n  deleteAContact(id: string) {\n    this.addressesList = this.addressesList.filter((address) => address.id !== id);\n    this.addressesChanged.next(this.addressesList.slice());\n  }\n}\n","import { Address } from '../models/address.modal';\n\nexport const addressesList: Address[] = [\n  {\n    id: 'a1',\n    name: 'Chaofan Wu',\n    ABNNum: 1009298353232323,\n    email: 'chaofan@email.com',\n    companyAddress: 'RMIT Melbourne, Victoria',\n    companyName: 'AME Algoritem',\n    walletsAddresses: [\n      {\n        type: 'BTC',\n        address: 'chaofanbtcjahsrgfasdfsdfasdfgdsd',\n        description: 'business',\n      },\n      {\n        type: 'NEM',\n        address: 'chaofanaskdjfksladgjklasdfasdfsdf',\n      },\n      {\n        type: 'BTC',\n        address: 'chaofanalksfjdasdgsdgrfasdfasdfa',\n        description: 'personal',\n      },\n    ],\n  },\n  {\n    id: 'a2',\n    name: 'Zidi Hu',\n    ABNNum: 1009298353232323,\n    email: 'zidi@email.com',\n    companyAddress: 'RMIT Melbourne, Victoria',\n    companyName: 'AME Algoritem',\n    walletsAddresses: [\n      {\n        type: 'NEM',\n        address: 'zidiNEMaskdjfksladgjklasdfasdfsdf',\n        description: 'business',\n      },\n      {\n        type: 'BTC',\n        address: 'zidibtcjahsrgfasdfsdfasdfgdsd',\n      },\n    ],\n  },\n\n  {\n    id: 'a3',\n    name: 'Athum',\n    ABNNum: 30076839298353232323,\n    email: 'athum@email.com',\n    walletsAddresses: [\n      {\n        type: 'NEM',\n        address: 'skdfaklsdjfasdfasdfasdfasdasd',\n      },\n      {\n        type: 'BTC',\n        address: 'klkjdfncksdnfladfgadsfdsfdsgfh',\n      },\n    ],\n  },\n\n  {\n    id: 'a4',\n    name: 'Mark Twain',\n    ABNNum: 40076839298353232323,\n    email: 'mark@email.com',\n    walletsAddresses: [\n      {\n        type: 'BTC',\n        address: 'jhlkdjfkasjdfklasdcnslkdfsdf',\n      },\n    ],\n  },\n\n  {\n    id: 'a5',\n    name: 'Isaac Newton',\n    ABNNum: 50076839298353232323,\n    email: 'isaac@email.com',\n    walletsAddresses: [\n      {\n        type: 'BTC',\n        address: 'sadkljfgasdcasdghgfdsasdfasdf',\n      },\n    ],\n  },\n  {\n    id: 'a6',\n    name: 'Thomas Alva Edison',\n    ABNNum: 60076839298353232323,\n    email: 'thomas@email.com',\n    walletsAddresses: [\n      {\n        type: 'NEM',\n        address: 'alkjfgfdghhjghjhfvvdfgdfsgd',\n      },\n    ],\n  },\n  {\n    id: 'a7',\n    name: 'Albert Einstein',\n    ABNNum: 70076839298353232323,\n    email: 'albert@email.com',\n    walletsAddresses: [\n      {\n        type: 'BTC',\n        address: 'bdfgsdffafhgtsadfasdfdsfv',\n      },\n      {\n        type: 'NEM',\n        address: 'dghsdsdasdfgdfhdfgbdcvdfgfdhfggadf',\n      },\n      {\n        type: 'ETH',\n        address: 'dgethdgsdafasdfrgfadsfasdfasdfasdfa',\n      },\n    ],\n  },\n  {\n    id: 'a8',\n    name: 'George Walker Bush',\n    ABNNum: 80076839298353232323,\n    email: 'george@email.com',\n    walletsAddresses: [\n      {\n        type: 'NEM',\n        address: 'ghdcasdfgdghfgasdfasdfdfdsfhg',\n      },\n    ],\n  },\n  {\n    id: 'a9',\n    name: 'Napoleon Bonaparte',\n    ABNNum: 90076839298353232323,\n    email: 'napoleon@email.com',\n    walletsAddresses: [\n      {\n        type: 'BTC',\n        address: 'cghfgfdasfdtythyuvsdvsasdf',\n      },\n      {\n        type: 'ETH',\n        address: 'sdgfsfglkdjcairtjioqwesdasfg',\n        description: 'napoleon eth wallet',\n      },\n    ],\n  },\n  {\n    id: 'a10',\n    name: 'Harper ',\n    ABNNum: 100898986775657883,\n    email: 'Evelyn@email.com',\n    walletsAddresses: [\n      {\n        type: 'BTC',\n        address: 'cghfgfdasfdtythyuvsdvsasdf',\n      },\n    ],\n  },\n  {\n    id: 'a11',\n    name: 'Mason ',\n    ABNNum: 110898986775657883,\n    email: 'Mason@email.com',\n    walletsAddresses: [\n      {\n        type: 'NEM',\n        address: 'sdfgsfhdhjykdfdcasdasdfads',\n      },\n    ],\n  },\n  {\n    id: 'a12',\n    name: 'Evelyn ',\n    ABNNum: 120898986775657883,\n    email: 'Evelyn@email.com',\n    walletsAddresses: [\n      {\n        type: 'NEM',\n        address: 'xfgfutyudsxvdfhfghsdadsfgfg',\n      },\n      {\n        type: 'BTC',\n        address: 'sfgfhtfdasfdsdfhgdyuytrgasd',\n      },\n    ],\n  },\n  {\n    id: 'a13',\n    name: 'William Shakespeare',\n    ABNNum: 1309298353232323,\n    email: 'willian@email.com',\n    walletsAddresses: [\n      {\n        type: 'BTC',\n        address: 'skdfaklsdjfasdfasdfasdfasdasd',\n      },\n    ],\n  },\n  {\n    id: 'a14',\n    name: 'Will Smith',\n    ABNNum: 1406839298353232323,\n    email: 'willSmith@email.com',\n    walletsAddresses: [\n      {\n        type: 'NEM',\n        address: 'sdgfadsfasdfasdfasdfasdfdfhyh',\n      },\n    ],\n  },\n];\n","import { Notification } from '../models/notification.model';\n\nexport const notifications: Notification[] = [\n  // Systen notifications:\n  {\n    id: 'n1',\n    type: 'system',\n    title: 'System update',\n    message: 'New version of AEM+ 2.0 will release this year',\n    date: 1549756800000,\n    isRead: false,\n  },\n  {\n    id: 'n2',\n    type: 'system',\n    title: 'System update',\n    message: 'AEM+ will perform a scheduled system update',\n    date: new Date().getTime(),\n    isRead: false,\n  },\n  // Transactions notifications of different wallets\n  //      ---> myBTCwallet1 wallet\n  {\n    id: 'n3',\n    type: 'transaction',\n    title: 'Transactions',\n    message: 'you have received 100 aud from someone at 2021-03-25',\n    walletAddress: 'sjdfasfl45asdfass454dfasdfsd',\n    date: 1580475600000,\n    isRead: false,\n  },\n  {\n    id: 'n4',\n    type: 'transaction',\n    title: 'Transactions',\n    message: 'new transacion from someone at a certain date',\n    walletAddress: 'sjdfasfl45asdfass454dfasdfsd',\n    date: 1580475688900,\n    isRead: false,\n  },\n  {\n    id: 'n5',\n    type: 'transaction',\n    title: 'Transactions',\n    message: 'new transacion from someone at a certain date',\n    walletAddress: 'sjdfasfl45asdfass454dfasdfsd',\n    date: new Date().getTime(),\n    isRead: false,\n  },\n  //      ---> myXEMwallet1 wallet\n\n  {\n    id: 'n6',\n    type: 'transaction',\n    title: 'Transactions',\n    message: 'new transacion from someone at a certain date',\n    walletAddress: 'jknlkasdfjaskdnfaksldfwieeesdf',\n    date: new Date().getTime(),\n    isRead: false,\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Transaction } from '../models/transaction.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HelperFunService {\n  constructor() {}\n\n  getDate(date: Date) {\n    // Thu,10 Feb 2020\n    console.log(date);\n  }\n\n  dateFormat(date: Date) {\n    let months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    // DD MMM YY\n    return (\n      date.getDate() + '/' + months[date.getMonth()].substring(0, 3) + '/' + date.getFullYear().toString().substr(-2)\n    );\n  }\n\n  isSameDay(d1: Date, d2: Date) {\n    return d1.getFullYear() === d2.getFullYear() && d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth();\n  }\n\n  isThisWeek(date: Date) {\n    const todayObj = new Date();\n    const todayDate = todayObj.getDate();\n    const todayDay = todayObj.getDay();\n\n    const firstDayOfWeek = new Date(todayObj.setDate(todayDate - todayDay));\n    const lastDayOfWeek = new Date(firstDayOfWeek);\n\n    lastDayOfWeek.setDate(lastDayOfWeek.getDate() + 6);\n\n    return date >= firstDayOfWeek && date <= lastDayOfWeek;\n  }\n\n  isThisMonth(d1: Date, d2: Date) {\n    return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth();\n  }\n\n  isThisYear(d1: Date, d2: Date) {\n    return d1.getFullYear() === d2.getFullYear();\n  }\n\n  isInDateRange(date: Date, start: Date, end: Date) {\n    return date >= start && date <= end;\n  }\n\n  isInAmountRange(amount: number, maxAmount: number, minAmount: number) {\n    return amount >= minAmount && amount <= maxAmount;\n  }\n\n  //  fixed period fitered transaction:\n  onDayFilter(transactions: Transaction[]) {\n    return transactions.filter((trans) => this.isSameDay(new Date(trans.time), new Date()));\n  }\n\n  onWeekFilter(transactions: Transaction[]) {\n    return transactions.filter((trans) => this.isThisWeek(new Date(trans.time)));\n  }\n\n  onMonthFilter(transactions: Transaction[]) {\n    return transactions.filter((trans) => this.isThisMonth(new Date(trans.time), new Date()));\n  }\n\n  onYearFilter(transactions: Transaction[]) {\n    return transactions.filter((trans) => this.isThisYear(new Date(trans.time), new Date()));\n  }\n\n  // range filtered transaction:\n  dateRangeFilter(transactions: Transaction[], startDate: Date, endDate: Date) {\n    return transactions.filter((trans) => this.isInDateRange(new Date(trans.time), startDate, endDate));\n  }\n\n  amountRangeFilter(transactions: Transaction[], maxAmount: number, minAmount: number) {\n    return transactions.filter((trans) => this.isInAmountRange(trans.amountAUD, maxAmount, minAmount));\n  }\n\n  amountRangeWithTypeFilter(transactions: Transaction[], maxAmount: number, minAmount: number, type: string) {\n    if (type === 'AUD') {\n      return transactions.filter((trans) => this.isInAmountRange(trans.amountAUD, maxAmount, minAmount));\n    } else {\n      // crypto currecy amount\n      return transactions.filter((trans) => this.isInAmountRange(trans.amount, maxAmount, minAmount));\n    }\n  }\n}\n","export class walletAddress {\n  type: string;\n  address: string;\n  description?: string;\n}\n\nexport class Address {\n  constructor(\n    public id: string,\n    public name: string,\n    public ABNNum?: number,\n    public email?: string,\n    public companyAddress?: string,\n    public companyName?: string,\n    public walletsAddresses?: walletAddress[]\n  ) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Notification } from '../models/notification.model';\nimport { notifications } from '../dummyData/notifications.data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsService {\n  notifications: Notification[] = notifications;\n\n  constructor() {}\n\n  getAllNotifictions() {\n    return this.notifications;\n  }\n\n  getAllNotificationCounts() {\n    return this.notifications.length;\n  }\n\n  getWalletNotificationNums(walletAddress: string) {\n    let counts = 0;\n\n    this.notifications.forEach((notification) => {\n      if (notification.walletAddress && notification.walletAddress == walletAddress) {\n        // console.log('inside of notification service:', notification.walletAddress, walletAddress);\n        counts += 1;\n      }\n    });\n\n    // console.log('inside of notification service:', counts);\n    return counts;\n  }\n\n  getWalletNotifications(address: string) {\n    return this.notifications.filter((notifiction) => notifiction.walletAddress === address);\n  }\n}\n"],"sourceRoot":"webpack:///"}